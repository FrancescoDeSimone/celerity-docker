FROM nvidia/cuda:10.0-devel-ubuntu18.04

ARG hipsycl_branch=master
ARG hipsycl_commit=30750bbe072769143b701a8f2af3f21c2a4c6bc0
ARG hipsycl_origin=https://github.com/illuhad/hipSYCL

ENV hipsycl_branch=$hipsycl_branch
ENV hipsycl_origin=$hipsycl_origin
ENV celerity_DIR=/usr/lib
ENV hipSYCL_DIR=/usr/lib
ENV HIPSYCL_PLATFORM=cpu
ENV CXX=clang++-10
ENV PATH=/usr/local/cuda/bin:$PATH
ENV LIBRARY_PATH=/usr/local/cuda/lib64:$LIBRARY_PATH

RUN apt-get update && \
      apt-get install -f -y vim exuberant-ctags git curl cmake libboost-all-dev python3 llvm-10 llvm-10-dev clang-10 libclang-10-dev \
      libllvm10 libomp-10-dev llvm-10-runtime clang-tools-10 libclang-common-10-dev libclang1-10 libomp-10-dev && rm -rf /var/lib/apt/lists/*
WORKDIR /tmp
RUN git clone -b $hipsycl_branch --recurse-submodules $hipsycl_origin && cd hipSYCL && git reset --hard $hipsycl_commit && git clean -f && git submodule update --recursive && mkdir /tmp/build
RUN cd /tmp/hipSYCL/contrib/HIP && git rev-parse --verify HEAD
RUN cd /tmp/hipSYCL/contrib/hipCPU && git rev-parse --verify HEAD
WORKDIR /tmp/build
RUN cmake -DCMAKE_INSTALL_PREFIX=/usr -DWITH_CPU_BACKEND=ON /tmp/hipSYCL && make -j$(($(nproc))) install && \
                                 echo "deb http://kambing.ui.ac.id/ubuntu/ focal main restricted universe multiverse" >> /etc/apt/sources.list && \
                                 echo "deb http://kambing.ui.ac.id/ubuntu/ focal-updates main restricted universe multiverse" >> /etc/apt/sources.list && \
                                 echo "deb http://kambing.ui.ac.id/ubuntu/ focal-security main restricted universe multiverse" >> /etc/apt/sources.list && \
                                 echo "deb http://kambing.ui.ac.id/ubuntu/ focal-backports main restricted universe multiverse" >> /etc/apt/sources.list && \
                                 echo "deb http://kambing.ui.ac.id/ubuntu/ focal-proposed main restricted universe multiverse" >> /etc/apt/sources.list && \
                                 apt-get update && apt-get install -y ninja-build cmake ack-grep wmctrl xdg-utils && rm -rf /var/lib/apt/lists/* 
RUN rm -r /tmp/*

WORKDIR /tmp
RUN git clone --recurse-submodules https://github.com/celerity/celerity-runtime && cd celerity-runtime && mkdir build
WORKDIR /tmp/celerity-runtime/build
RUN cmake -G Ninja .. -DCMAKE_PREFIX_PATH="/usr/lib" -DCMAKE_INSTALL_PREFIX="/usr" -DCMAKE_BUILD_TYPE=Release && ninja -j$(($(nproc))) install 
RUN rm -r /tmp/*

RUN useradd -ms /bin/bash celerity
USER celerity
WORKDIR /home/celerity
RUN git clone https://github.com/bcosenza/celerity-bench && cd celerity-bench && mkdir build && cd build && cmake .. && make -j$(($(nproc))) \ 
    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim && curl https://raw.githubusercontent.com/HikoQiu/vim-config/master/.vimrc > ~/.vimrc

